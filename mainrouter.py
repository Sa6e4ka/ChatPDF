# Dd –≤–í
from aiogram import F, Router, Bot
from aiogram.filters import Command, or_f, StateFilter, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.state import State, StatesGroup

from main import upload, chat

DOWNLOAD_DIR = 'downloads/'

# main router
mr = Router()

class Chat(StatesGroup):
    upload = State()
    chat = State()


@mr.message(StateFilter('*') , F.text == '/delete')
async def delete(mes: Message, state: FSMContext):
    await state.clear()
    await mes.answer('–ß—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç, —Ç—ã–∫–∞–π —Å—é–¥–∞ -> /upload')

@mr.message(StateFilter(None), CommandStart())
async def start(mes : Message):
    await mes.answer('–ú–∞–Ω—É–∞–ª—å—á–∏–∫!\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /upload\n\n–¢—ã –º–æ–∂–µ—à—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–æ–ø—Ä–æ—Å—ã –±–æ—Ç—É –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç—É\n\n–ß—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π (–Ω–µ –ø–µ—Ä–≤—ã–π) –¥–æ–∫—É–º–µ–Ω—Ç, –≤–≤–µ–¥–∏ /delete, –∞ –∑–∞—Ç–µ–º –∑–∞–≥—Ä—É–∑–∏ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ!')

@mr.message(StateFilter(None), Command('upload'))
async def uploading(mes : Message, state: FSMContext):
    await mes.answer('–û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º PDF')
    await state.set_state(Chat.upload)

@mr.message(StateFilter(Chat.upload), F.document)
async def uploading_(mes : Message, state: FSMContext, bot : Bot):
    try: 
        file_id = mes.document.file_id
        file_name = mes.document.file_name
        file_path = f'{DOWNLOAD_DIR}{file_name}'
        await bot.download(file_id, file_path)
        Source_id = upload(path=file_path)
        await state.update_data(Source_id = Source_id)
        await state.set_state(Chat.chat)

        await mes.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫–∞—Å–∞–µ–º–æ —ç—Ç–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞')
    except:
        await mes.answer('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ü•∂\n\n–¢—ã–∫ -> /upload')
        await state.clear()

@mr.message(StateFilter(Chat.chat), F.text)
async def chating(mes : Message, state: FSMContext):
    quest = mes.text
    state_data = await state.get_data()
    await mes.answer(text=f'{str(chat(Source_id=state_data['Source_id'], message=quest))}\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —ç—Ç–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º, —Ç–æ –≤–≤–µ–¥–∏ /delete')




    